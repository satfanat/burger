VÁLTOZÓK	
	
function valami(){  } - függvény létrehozása, tartalom a kapcsos zárójelben	
let - változó létrehozása értékkel, vagy anélkül
string(szám); - szám sztringgé alakítása
változóNeve.toString() - változó sztringgé alakítása
number(változó) - változó számmá alakítása, ha lehetséges (explicit módon)
typeof változó - változó típusának lekérdezése (string, szám. boolean stb.)
változóNeve.toFixed(2) - number változó értékének kerekítése 2 tizedesre
változóNeve.toPrecision(3) - number változó értékének kerekítése és vágása 3 számjegyűre (tizedessel együtt)	
document.querySelector - html elem kiválasztása
valami.innerHTML = változó; - html elem megváltoztatása
parseInt() - számmá alakítás egész számmá
parseFloat() - számmá alakítás tizedessel
const - konstans érték
alert("valami" + változó) - felugró alakban üzenet + a változó értéke
<button onclick="függvény neve()" type="button">Szöveg</button> -  kattintásra indul a függvény
document.querySelector("input[name='valami']"); - html dokumentumban egy input elem nevének kiválasztása
let változó = document.querySelector("input[name='css osztály neve']"); - kiválasztott elem változóvá tétele
változó.value - változó értékének kiolvasása sztringen
változó.innerHtml = másikváltozó; - változó értékét beírja egy Html elembe

METÓDUSOK:

változó.length; - változó karaktereinek száma
változó.trim(); - változó szóközeinek levágása
változó.concat(valtozo2); - változók egyesítése, összefűzése
változó.toLowerCase(); - változó kisbetűre alakítása
változó.toUpperCase(); - változó nagybetűre alakítása
változó.indexOf("valami"); - szöveg keresése a változóban
változó.replace("valamiről", "valamire"); - szöveg cseréje a változóban
Boolean(változó) - ha nem nulla szám vagy nulla db karakter akkor true
! - tagadás
== - engyenlőség
!= - nem egyenlő
&& - és
|| - vagy
if - ha
else if - különben ha
else - akkor
isNan(változó) - megmondja hogy Nan vagy nem Nan a változó értéke
változó = isNaN(változó) ? érték : változó; - ha a változó értéke NaN, akkor a változó helyére beírja az értéket
// - komment

Tömbök metódusai
változó.push("valami"); - a tömb végére adja hozzá a valamit (új elemet)
változó.pop();          - törli a tömb utolsó elemét
változó.unshift("valami"); - a tömb elejére adja hozzá a valamit (úje elemet)
változó.shift();          - törli a tömb első elemét

FÜGGVÉNYEK

function név() {függvény törzse}; - függvény létrehozása
függvény neve(); - a függvény elindítása



OBJEKTUMOK

let valami = { }; - új üres valami nevű objektum létrehozása
let valami = {kulcs: érték, kulcs2: érték2, kulcs3: érték3}; - valami nevű objektum értékekkel, a kulcs mindig string lehet
valami.kulcs2 - a valami nevű objektum kulcs2 nevű kulcsának lehívása
valami["kulcs2"] - ugyanaz mint az előző
Object.keys( valami ); - megmutatja, hogy a valami nevű objektumnak milyen kulcsai vannak
Object.values( valami ); - megmutatja, hogy a valami nevű objektumnak milyen értékei vannak
Object.entries( valami ); - megmutatja, hogy a valami nevű objektumnak milyen értékei és kulcsai vannak (tömb formátumban) entrie - kulcs - érték=értékpár
Object.entries( valami )[1]; - megmutatja hogy a valami nevű objektumban mi a második kulcs és értéke
Object.entries( valami )[1][0]; - megmutatja hogy a valami nevű objektumban a második kulcsot (érték nélkül)
Object.keys(valami).length; - megmutatja, hogy a valami nevű objektumnak hány kulcsa van (előszőr tömböt csinál belőle hogy megszámolhassa mert az objekttumnak nincs length formátuma)
Object.values(valami).length; - megmutatja, hogy a valami nevű objektumnak hány értéke van (előszőr tömböt csinál belőle hogy megszámolhassa)
valami = {}; - valami nevű objektum tartalmának törlése, (a zárójelbe írje megváltoztathatom az értékeket)
const valami; = {kulcs: érték, kulcs2: érték2, kulcs3: érték3}; - valami nevű objektum létrehozása értékekkel, később csak az objektum tartalma lesz változtatható a neve nem!
for (let k in valami);  - for in ciklus, működik objektumra és tömbre is, a kulcsokat listázza?
for (let k of valami);  - for in ciklus, működik objektumra és tömbre is, az értékeket listázza?
for (let k of Object.keys(valami)); - kiolvassa a valami objektumból a kulcsokat
for (let k of Object.values(valami)); - kiolvassa a valami objektumból a kulcsokat
for (let k of Object.entries(valami)); - kiolvassa a valami objektumból az értékpárokat
this - ?????????? rámutat valamire a változó neve helyett lehet használni
$ - arrow function, function helyett => jelet használni,és a függvény kapcsos zárójele is elhagyható

DOM

document.getElementById("valami id") - elem keresése id alapján
document.getElementsByName("valami neve") - elem keresése név alapján, eredménye tömb lesz
document.getElementsByClassName("valami-osztály") - elem keresése osztály alapján, eredménye tömb lesz
document.getElementsByTagName("html elem") - elem keresése HTML elemre (pl h1, h3) eredménye tömb lesz
document.querySelector(".css osztály") - elem keresése HTML elemre? ezt szokták használni, eredmény element nevű objektum





